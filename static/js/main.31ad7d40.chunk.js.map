{"version":3,"sources":["MyAppBar.js","Home.js","store/store.js","Problems.js","About.js","ProblemView.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","color","aria-label","Menu_default","Typography","variant","Button","component","Link","to","Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Component","problems","Problems","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","loading","problemsFetched","setState","done","axios","get","then","xml","xml2js","parseString","data","err","res","Problem","i","push","name","Name","source","Source","editorial","Editorial","description","Description","code","Code","catch","e","alert","console","log","_this$state","output","List","map","p","ListItem","ListItemIcon","Description_default","ListItemText","primary","secondary","Container","About","ProblemView","showCode","toggle","id","problem","match","params","problem_id","Divider","onClick","Code_default","default_highlight","language","style","dark","showLineNumbers","wrapLines","App","react_router_dom","MyAppBar","react_router","exact","path","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31ad7d40.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nfunction ButtonAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Rezaul Haque\r\n          </Typography>\r\n          <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\r\n          <Button color=\"inherit\" component={Link} to=\"/problems\">Problems</Button>\r\n          <Button color=\"inherit\" component={Link} to=\"/about\">About</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import React, { Component } from 'react'\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Home Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios'\r\nimport xml2js from 'xml2js'\r\n\r\nlet problems = null;\r\n\r\nconst fetchProblems = (done) => {\r\n    if (problems === null) {\r\n        axios.get(\"https://rezaulhsagar.github.io/cp2/problems.xml\")\r\n        .then(xml => {\r\n            xml2js.parseString(xml.data, (err, res) => {\r\n                res = res.Problems.Problem;\r\n                problems = []\r\n                for (let i=0; i<res.length; i++) {\r\n                    problems.push({\r\n                        key: i,\r\n                        name: res[i].Name[0],\r\n                        source: res[i].Source[0],\r\n                        editorial: res[i].Editorial[0],\r\n                        description: res[i].Description[0],\r\n                        code: res[i].Code[0]\r\n                    })\r\n                }\r\n                done(problems);\r\n            });\r\n        })\r\n        .catch(e => {\r\n            alert(e);\r\n        });\r\n    } else {\r\n        console.log(\"vola!\");\r\n        done(problems);\r\n    }\r\n}\r\n\r\nconst fetchSingleProblem = (id) => {\r\n    return (problems === null ? null : problems[id])\r\n}\r\n\r\nexport { fetchProblems, fetchSingleProblem }","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DescriptionIcon from '@material-ui/icons/Description'\r\n\r\nimport { fetchProblems } from './store/store'\r\n\r\nexport class Problems extends Component {\r\n  state = {\r\n    loading: true,\r\n    problems: []\r\n  }\r\n\r\n  problemsFetched = (problems) => {\r\n    this.setState({\r\n      loading: false,\r\n      problems\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetchProblems(this.problemsFetched);\r\n  }\r\n\r\n  render() {\r\n    const { loading, problems } = this.state;\r\n    let output = null;\r\n    if (loading)\r\n      output = (<Typography variant=\"h6\">Loading...</Typography>);\r\n    else\r\n      output = (\r\n        <List>\r\n          {problems.map(p => (\r\n          <ListItem component={Link} to={\"/problem/\"+p.key} key={p.key}>\r\n            <ListItemIcon>\r\n              <DescriptionIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={p.name}\r\n              secondary={p.source}/>\r\n          </ListItem>\r\n          ))}\r\n        </List>\r\n      )\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h2\">Problems</Typography>\r\n        {output}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Problems\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        About Page\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CodeIcon from '@material-ui/icons/Code'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nimport { fetchSingleProblem } from './store/store'\r\n\r\nexport class ProblemView extends Component {\r\n  state = {\r\n      showCode: false\r\n  }\r\n\r\n  toggle = (e) => {\r\n      // TODO: fix this\r\n      this.setState({showCode: !this.state.showCode});\r\n  }\r\n\r\n  render() {\r\n    const problem = fetchSingleProblem(this.props.match.params.problem_id)\r\n    const { name, source, description, editorial, code } = problem\r\n    const { showCode } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"title\" component=\"h1\">{name}</Typography>\r\n        <Typography variant=\"subtitle2\">{source}</Typography>\r\n        <Divider variant=\"fullWidth\"/>\r\n        <Typography component=\"p\">{description}</Typography>\r\n        <Divider variant=\"fullWidth\"/>\r\n        <Typography component=\"p\">{editorial}</Typography>\r\n        <Divider variant=\"fullWidth\"/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.toggle}>\r\n            <CodeIcon/>{showCode ? \"Hide Code\" : \"Show Code\"}\r\n        </Button>\r\n       \r\n        {showCode &&\r\n          <SyntaxHighlighter \r\n            language=\"cpp\" \r\n            style={dark}\r\n            showLineNumbers\r\n            wrapLines\r\n          >\r\n            {code}\r\n          </SyntaxHighlighter>\r\n        }\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProblemView\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport MyAppBar from './MyAppBar'\nimport Home from './Home'\nimport Problems from './Problems'\nimport About from './About'\nimport ProblemView from './ProblemView'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <MyAppBar/>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/problems\" component={Problems}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/problem/:problem_id\" component={ProblemView}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}